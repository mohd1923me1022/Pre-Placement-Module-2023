class Solution {
public:

bool issame(TreeNode* root, TreeNode* subRoot)
{
    if(root==NULL || subRoot==NULL)
        return root==subRoot;
    return ((root->val == subRoot->val) && issame(root->left,subRoot->left) && issame(root->right,subRoot->right));
}
    

bool isSubtree(TreeNode* root, TreeNode* subRoot) {
    if(root==NULL || subRoot==NULL)
        return (root==subRoot);
		//checking if subtree exists starting from root node or left child node or right child node
    return issame(root,subRoot) || isSubtree(root->left,subRoot) || isSubtree(root->right,subRoot);
}
};

